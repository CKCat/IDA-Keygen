#!/usr/bin/env python3

from argparse import ArgumentParser
import shutil

new_key = b"\xED\xFD\x42\xCB\xF9\x78\x54\x6E\x89\x11\x22\x58\x84\x43\x6C\x57\x14\x05\x25\x65\x0B\xCF\x6E\xBF\xE8\x0E\xDB\xC5\xFB\x1D\xE6\x8F\x4C\x66\xC2\x9C\xB2\x2E\xB6\x68\x78\x8A\xFC\xB0\xAB\xBB\x71\x80\x44\x58\x4B\x81\x0F\x89\x70\xCD\xDF\x22\x73\x85\xF7\x5D\x5D\xDD\xD9\x1D\x4F\x18\x93\x7A\x08\xAA\x83\xB2\x8C\x49\xD1\x2D\xC9\x2E\x75\x05\xBB\x38\x80\x9E\x91\xBD\x0F\xBD\x2F\x2E\x6A\xB1\xD2\xE3\x3C\x0C\x55\xD5"

start_pattern = b"\xED\xFD\x42"


def main():
    script = ArgumentParser()
    script.add_argument("path", help="dll path")
    args = script.parse_args()

    with open(args.path, "r+b") as f:
        data = f.read()

        start_offset = data.find(start_pattern)
        if start_offset == -1:
            print("error: public key pattern missing")
            return

        f.seek(start_offset)
        f.write(new_key)
        print("done.")


if __name__ == "__main__":
    main()
